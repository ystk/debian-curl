Description: Only use full host matches for hosts used as IP address
Origin: upstream, http://curl.haxx.se/libcurl-cookie-leak.patch
Forwarded: not-needed
Author: Tim Ruehsen <tim.ruehsen@gmx.de>
Last-Update: 2014-09-06

Index: curl-7.21.0/lib/cookie.c
===================================================================
--- curl-7.21.0.orig/lib/cookie.c	2014-09-26 12:22:58.000000000 +0200
+++ curl-7.21.0/lib/cookie.c	2014-09-26 12:42:21.000000000 +0200
@@ -97,6 +97,7 @@
 #include "strtoofft.h"
 #include "rawstr.h"
 #include "curl_memrchr.h"
+#include "inet_pton.h"
 
 /* The last #include file should be: */
 #include "memdebug.h"
@@ -181,6 +182,27 @@
   *str = strdup(newstr);
 }
 
+/*
+ * Return true if the given string is an IP(v4|v6) address.
+ */
+static bool isip(const char *domain)
+{
+  struct in_addr addr;
+#ifdef ENABLE_IPV6
+  struct in6_addr addr6;
+#endif
+
+  if(Curl_inet_pton(AF_INET, domain, &addr)
+#ifdef ENABLE_IPV6
+     || Curl_inet_pton(AF_INET6, domain, &addr6)
+#endif
+    ) {
+    /* domain name given as IP address */
+    return TRUE;
+  }
+
+  return FALSE;
+}
 
 /****************************************************************************
  *
@@ -315,24 +337,27 @@
                     whatptr);
             }
             else {
+              bool is_ip;
+
               /* Now, we make sure that our host is within the given domain,
                  or the given domain is not valid and thus cannot be set. */
 
               if('.' == whatptr[0])
                 whatptr++; /* ignore preceeding dot */
 
-              if(!domain || tailmatch(whatptr, domain)) {
-                const char *tailptr=whatptr;
-                if(tailptr[0] == '.')
-                  tailptr++;
-                strstore(&co->domain, tailptr); /* don't prefix w/dots
-                                                   internally */
+              is_ip = isip(domain ? domain : whatptr);
+
+              if(!domain
+                 || (is_ip && !strcmp(whatptr, domain))
+                 || (!is_ip && tailmatch(whatptr, domain))) {
+                strstore(&co->domain, whatptr);
                 if(!co->domain) {
                   badcookie = TRUE;
                   break;
                 }
-                co->tailmatch=TRUE; /* we always do that if the domain name was
-                                       given */
+                if(!is_ip)
+                  co->tailmatch=TRUE; /* we always do that if the domain name was
+                                         given */
               }
               else {
                 /* we did not get a tailmatch and then the attempted set domain
@@ -821,10 +846,14 @@
   time_t now = time(NULL);
   struct Cookie *mainco=NULL;
   size_t matches = 0;
+  bool is_ip;
 
   if(!c || !c->cookies)
     return NULL; /* no cookie struct or no cookies in the struct */
 
+  /* check if host is an IP(v4|v6) address */
+  is_ip = isip(host);
+
   co = c->cookies;
 
   while(co) {
@@ -836,8 +865,8 @@
 
       /* now check if the domain is correct */
       if(!co->domain ||
-         (co->tailmatch && tailmatch(co->domain, host)) ||
-         (!co->tailmatch && Curl_raw_equal(host, co->domain)) ) {
+         (co->tailmatch && !is_ip && tailmatch(co->domain, host)) ||
+         ((!co->tailmatch || is_ip) && Curl_raw_equal(host, co->domain)) ) {
         /* the right part of the host matches the domain stuff in the
            cookie data */
 
Index: curl-7.21.0/tests/data/test1105
===================================================================
--- curl-7.21.0.orig/tests/data/test1105	2014-09-26 12:22:58.000000000 +0200
+++ curl-7.21.0/tests/data/test1105	2014-09-26 12:22:58.000000000 +0200
@@ -56,8 +56,7 @@
 # This file was generated by libcurl! Edit at your own risk.
 
 127.0.0.1	FALSE	/we/want/	FALSE	0	foobar	name
-.127.0.0.1	TRUE	"/silly/"	FALSE	0	mismatch	this
-.0.0.1	TRUE	/	FALSE	0	partmatch	present
+127.0.0.1	FALSE	"/silly/"	FALSE	0	mismatch	this
 </file>
 </verify>
 </testcase>
Index: curl-7.21.0/tests/data/test31
===================================================================
--- curl-7.21.0.orig/tests/data/test31	2014-09-26 12:22:58.000000000 +0200
+++ curl-7.21.0/tests/data/test31	2014-09-26 12:50:00.000000000 +0200
@@ -27,7 +27,8 @@
 Set-Cookie: test=yes; domain=foo.com; expires=Sat Feb 2 11:56:27 GMT 2030
 Set-Cookie: test2=yes; domain=se; expires=Sat Feb 2 11:56:27 GMT 2030
 Set-Cookie: magic=yessir; path=/silly/; HttpOnly
-Set-Cookie: blexp=yesyes; domain=.0.0.1; domain=.0.0.1; expiry=totally bad;
+Set-Cookie: blexp=yesyes; domain=127.0.0.1; domain=127.0.0.1; expiry=totally bad;
+Set-Cookie: partialip=nono; domain=.0.0.1;
 
 boo
 </data>
@@ -68,11 +69,11 @@
 # http://curl.haxx.se/rfc/cookie_spec.html
 # This file was generated by libcurl! Edit at your own risk.
 
-.127.0.0.1	TRUE	/silly/	FALSE	0	ismatch	this
-.127.0.0.1	TRUE	/	FALSE	0	partmatch	present
+127.0.0.1	FALSE	/silly/	FALSE	0	ismatch	this
+127.0.0.1	FALSE	/	FALSE	0	partmatch	present
 127.0.0.1	FALSE	/we/want/	FALSE	2054030187	nodomain	value
 #HttpOnly_127.0.0.1	FALSE	/silly/	FALSE	0	magic	yessir
-.0.0.1	TRUE	/we/want/	FALSE	0	blexp	yesyes
+127.0.0.1	FALSE	/we/want/	FALSE	0	blexp	yesyes
 </file>
 </verify>
 </testcase>
Index: curl-7.21.0/tests/data/test8
===================================================================
--- curl-7.21.0.orig/tests/data/test8	2014-09-26 12:22:58.000000000 +0200
+++ curl-7.21.0/tests/data/test8	2014-09-26 12:22:58.000000000 +0200
@@ -42,7 +42,8 @@
 Set-Cookie: cookie=yes; path=/we;
 Set-Cookie: cookie=perhaps; path=/we/want;
 Set-Cookie: nocookie=yes; path=/WE;
-Set-Cookie: blexp=yesyes; domain=.0.0.1; domain=.0.0.1; expiry=totally bad;
+Set-Cookie: blexp=yesyes; domain=%HOSTIP; domain=%HOSTIP; expiry=totally bad;
+Set-Cookie: partialip=nono; domain=.0.0.1;
 
 </file>
 </client>
@@ -56,7 +57,7 @@
 GET /we/want/8 HTTP/1.1
 Host: %HOSTIP:%HTTPPORT
 Accept: */*
-Cookie: cookie=perhaps; cookie=yes; partmatch=present; foobar=name; blexp=yesyes
+Cookie: cookie=perhaps; cookie=yes; foobar=name; blexp=yesyes
 
 </protocol>
 </verify>
