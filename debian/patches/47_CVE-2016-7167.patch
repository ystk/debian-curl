From: Markus Koschany <apo@debian.org>
Date: Tue, 6 Nov 2018 16:59:24 +0100
Subject: CVE-2016-7167

Bug-Debian: https://bugs.debian.org/837945
Origin: https://curl.haxx.se/CVE-2016-7167.patch
---
 lib/escape.c | 30 ++++++++++++++++--------------
 1 file changed, 16 insertions(+), 14 deletions(-)

diff --git a/lib/escape.c b/lib/escape.c
index de210ad..4a076bf 100644
--- a/lib/escape.c
+++ b/lib/escape.c
@@ -80,15 +80,21 @@ char *curl_unescape(const char *string, int length)
 
 char *curl_easy_escape(CURL *handle, const char *string, int inlength)
 {
-  size_t alloc = (inlength?(size_t)inlength:strlen(string))+1;
+  size_t alloc;
   char *ns;
   char *testing_ptr = NULL;
   unsigned char in; /* we need to treat the characters unsigned */
-  size_t newlen = alloc;
+  size_t newlen;
   size_t strindex=0;
   size_t length;
   CURLcode res;
 
+  if(inlength < 0)
+    return NULL;
+
+  alloc = (inlength?(size_t)inlength:strlen(string))+1;
+  newlen = alloc;
+
   ns = malloc(alloc);
   if(!ns)
     return NULL;
@@ -212,19 +218,15 @@ char *curl_easy_unescape(CURL *handle, const char *string, int length,
                          int *olen)
 {
   char *str = NULL;
-  size_t inputlen = length;
-  size_t outputlen;
-  CURLcode res = Curl_urldecode(handle, string, inputlen, &str, &outputlen,
-                                FALSE);
-  if(res)
-    return NULL;
-
-  if(olen) {
-    if(outputlen <= (size_t) INT_MAX)
+  if(length >= 0) {
+    size_t inputlen = length;
+    size_t outputlen;
+    CURLcode res = Curl_urldecode(handle, string, inputlen, &str, &outputlen,
+                                  FALSE);
+    if(res)
+      return NULL;
+    if(olen)
       *olen = curlx_uztosi(outputlen);
-    else
-      /* too large to return in an int, fail! */
-      Curl_safefree(str);
   }
   return str;
 }
